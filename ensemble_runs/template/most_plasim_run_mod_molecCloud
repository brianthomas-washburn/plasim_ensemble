#!/bin/bash
# run-script generated by Most, modified by Cody Ratterman to run in sections with specified changes

# ----------------------------------------------------------------------------------- #
# ------------ Set length of sections and parts of runs here. (in years) ------------ #
# --- number of sections rounds down if *_YEARS variable is not divisible by YEARS -- #
# ----------------------------------------------------------------------------------- #
YEARS=( 2  2 ) # years in a section (**not the full run**)
SECNUM=1 #number of sections minus 1
CURYEARS=0
declare -i TYEARS
SOLAR_CONSTANT=( 1367 675 )
#CLIMA_YEARS=1 # years to run with prescribed climatology parameters

#CONTROL_YEARS=1 # years to run with calculated parameters and control ozone profile

#SNCASE_YEARS=1 # years to run with calculated parameters and supernova case ozone profile

#CONTROL_OZONE_PROFILE='../O3profiles/N032_level_0237_Control-NOspe-Dec.sra' # Control case ozone data
#SNCASE_OZONE_PROFILE='../O3profiles/N032_level_0237_50pcSNCR-B-300yr.sra' # Supernova case ozone data

O3OPT=1 # flag for radmod to use O3 profile from file (2 to read from file)
# ! (Make sure the radmod_namelist has NO3 in it or this will not work)
# You can also run using 0 for no O3 or 1 for idealized O3
#  In those cases the O3 files will NOT be used and there will be no difference
#  between "control" and "supernova"
# ----------------------------------------------------------------------------------- #
# ----------------------------------------------------------------------------------- #

#TOTAL_YEARS=0 # years in a full run
#CLIMA_SECTIONS=`expr $CLIMA_YEARS / $YEARS` # number of prescribed climatology sections
#CONTROL_SECTIONS=`expr $CONTROL_YEARS / $YEARS` # number of control case sections 
#SNCASE_SECTIONS=`expr $SNCASE_YEARS / $YEARS` # number of supernova case sections
#TOTAL_SECTIONS=`expr $TOTAL_YEARS / $YEARS` # number of sections making up a full run

EXP=ensemble.01
RUN_DIR=$PWD

main() {

    echo $EXP
    TYEARS=0

    # remove origional pre-existing files
    rm -f plasim_restart
    rm -f Abort_Message
	
    # modify namelists
    sed -i -e 's/KICK.*/KICK=1/' plasim_namelist
    sed -i -e 's/NGUI.*/NGUI=0/' plasim_namelist
    sed -i -e 's/N_RUN_YEARS.*/N_RUN_YEARS=1/' plasim_namelist
    sed -i -e 's/N_RUN_MONTHS.*/N_RUN_MONTHS=0/' plasim_namelist
	
    sed -i -e 's/NOCEAN.*/NOCEAN=0/' oceanmod_namelist
    sed -i -e 's/NICE.*/NICE=0/' icemod_namelist
    sed -i -e 's/NLANDT.*/NLANDT=0/' landmod_namelist

    #sed -i -e "s/multi.*/multi=${YEARS}/" ../template/PostProcessing/PP_NL_Long
    #sed -i -e "s/multi.*/multi=${YEARS}/" ../template/PostProcessing/PP_NL_Short

    sed -i -e "s/NO3.*/NO3=1/" radmod_namelist

    SECTION_NUM=1 
    
    sed -i -e 's/NOCEAN.*/NOCEAN=1/' oceanmod_namelist
    sed -i -e 's/NICE.*/NICE=1/' icemod_namelist
    sed -i -e 's/NLANDT.*/NLANDT=1/' landmod_namelist
    
    for (( i=0; i<=$SECNUM; i++ )); do
	sed -i -e "s/GSOL0.*/GSOL0=${SOLAR_CONSTANT[i]}/" planet_namelist
	sed -i -e "s/N_RUN_YEARS.*/N_RUN_YEARS=${YEARS[@]:i:1}/" plasim_namelist
	CURYEARS=${YEARS[i]}  
	echo "---"
	echo "Solar Constant Section" $SECTION_NUM
	echo "---"
        run_section
	#post_process
	#clean_up
	SECTION_NUM=`expr $SECTION_NUM + 1`
    done
    
    
}

# Run a single section of a run (copied from most_plasim_run script)
run_section () {

    DIRNAME=`printf 'section.%02d' $SECTION_NUM`
    mkdir $DIRNAME
    for (( YEAR=1; YEAR<=$CURYEARS; YEAR++ )); do # loop for each year in (section length) years
	echo "Current Years is" $YEAR
	TYEARS+=1
        DATANAME=`printf '%s.%03d' $EXP $YEAR`
        DIAGNAME=`printf '%s_DIAG.%03d' $EXP $YEAR`
        RESTNAME=`printf '%s_REST.%03d' $EXP $YEAR`
        mpiexec -np 8 ./most_plasim_t21_l10_p8.x
        [ -e Abort_Message ] && exit 1
        [ -e plasim_output ] && mv plasim_output $DIRNAME/$DATANAME
        [ -e plasim_diag ] && mv plasim_diag $DIRNAME/$DIAGNAME
        [ -e plasim_status ] && cp plasim_status plasim_restart
        [ -e plasim_status ] && mv plasim_status $DIRNAME/$RESTNAME
    done
}

# Run post processor on the previous section
post_process () {

    POSTPROCESSOR_DIR='../../postprocessor' # define postprocessor directory
    
    #the postprocessor is copied here to run because it cannot handle long path names and so running it here avoids that issue
    cp $POSTPROCESSOR_DIR/burn7.x ./
	./burn7.x ./$DIRNAME/$EXP.001 ./PostProcessing/section.$SECTION_NUM < ../template/PostProcessing/PP_NL_Short > ./PostProcessing/section.$SECTION_NUM.PP_output.txt

}

# Return to run directory and tar previous section binary data files
clean_up () {
    cd $RUN_DIR
    tar -czf $DIRNAME.tar.gz $DIRNAME
    rm -r $DIRNAME
    rm burn7.x
}

# read command parameter(s) and call main function
[ $# == 1 ] && cd $1
main "$@"; exit
